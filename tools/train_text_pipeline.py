import os
import joblib
import pandas as pd
from sklearn.pipeline import Pipeline
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression

PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
ARTIFACTS_DIR = os.path.join(PROJECT_ROOT, 'artifacts')
ARTIFACT = os.path.join(ARTIFACTS_DIR, 'text_model.joblib')
SAMPLE_CSV = os.path.join(PROJECT_ROOT, 'data', 'sample.csv')

os.makedirs(ARTIFACTS_DIR, exist_ok=True)

# Try to load training data
if os.path.exists(SAMPLE_CSV):
    try:
        df = pd.read_csv(SAMPLE_CSV)
        # assume last column is target and first text column is first
        X = df.iloc[:,0].astype(str)
        y = df.iloc[:,-1]
    except Exception:
        X = pd.Series(["This is real text","Generated by AI"])
        y = pd.Series(["Real","AI"])
else:
    X = pd.Series(["This is real text","Generated by AI"])
    y = pd.Series(["Real","AI"])

pipeline = Pipeline([
    ('tfidf', TfidfVectorizer(max_features=5000)),
    ('clf', LogisticRegression(max_iter=1000))
])

pipeline.fit(X, y)

joblib.dump(pipeline, ARTIFACT)
print(f'Saved text pipeline to {ARTIFACT}')
